# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

permissions:
  contents: write
  id-token: write
  attestations: write

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  # Fast quality checks - run in parallel
  lint-and-format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - name: Use Node.js 20.x
      uses: actions/setup-node@v5
      with:
        node-version: 20.x
        cache: 'npm'
    - name: Install dependencies
      run: npm ci --prefer-offline --no-audit
    - name: Run lint with autofix
      run: npm run lint
    - name: Run format check
      run: npm run format
    - name: Commit autofix changes
      if: github.event_name == 'push'
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
        git add -A
        git diff --staged --quiet || git commit -m "chore: apply automated fixes [skip ci]"
        git push

  # Main build and test matrix - optimized for speed
  build-and-test:
    runs-on: ubuntu-latest
    needs: lint-and-format
    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v5
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v5
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --prefer-offline --no-audit
    
    - name: TypeScript type check
      run: npm run typecheck
    
    - name: Build TypeScript files
      run: npm run build
    
    - name: Run tests with coverage
      run: |
        if [ "${{ matrix.node-version }}" = "20.x" ]; then
          npm run coverage
        else
          npm test
        fi
      env:
        # Gate external integration tests - only run when explicitly enabled
        RUN_INTEGRATION_TESTS: false
        # Use in-memory vector store for CI to avoid ChromaDB dependency
        LLM_VECTOR_STORE: memory
    
    # Coverage and artifacts only for Node 20.x to reduce overhead
    - name: Upload coverage to Coveralls
      if: matrix.node-version == '20.x' && success()
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Archive test results
      if: matrix.node-version == '20.x' && always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-node-${{ matrix.node-version }}
        path: |
          coverage/
          test-results/
        retention-days: 7
        if-no-files-found: warn
    
    - name: Archive build output
      if: matrix.node-version == '20.x' && success()
      uses: actions/upload-artifact@v4
      id: upload-artifact
      with:
        name: build-output
        path: dist/
        retention-days: 7
        if-no-files-found: warn
    
    - name: Attest build provenance
      if: matrix.node-version == '20.x' && success()
      uses: actions/attest-build-provenance@v3
      with:
        subject-path: 'dist/**'