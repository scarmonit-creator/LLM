# Optimized Node.js CI/CD Pipeline with Performance Enhancements
# This workflow implements intelligent caching, parallel execution, and optimized build strategies
name: Node.js CI

permissions:
  contents: write
  id-token: write
  attestations: write
  actions: read
  checks: write

on:
  push:
    branches: [ "main" ]
    paths:
      - '**.js'
      - '**.ts'
      - '**.jsx'
      - '**.tsx'
      - '**.json'
      - 'package*.json'
      - 'yarn.lock'
      - 'pnpm-lock.yaml'
      - '.github/workflows/node.js.yml'
      - 'src/**'
      - 'test/**'
      - 'tests/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - '**.js'
      - '**.ts'
      - '**.jsx'
      - '**.tsx'
      - '**.json'
      - 'package*.json'
      - 'yarn.lock'
      - 'pnpm-lock.yaml'
      - '.github/workflows/node.js.yml'
      - 'src/**'
      - 'test/**'
      - 'tests/**'
  workflow_dispatch:

# Prevent concurrent builds to avoid conflicts and optimize resource usage
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_ENV: ci
  CI: true
  # Optimize npm operations
  NPM_CONFIG_PROGRESS: false
  NPM_CONFIG_AUDIT: false
  NPM_CONFIG_FUND: false
  # Performance environment variables
  RUN_INTEGRATION_TESTS: false
  LLM_VECTOR_STORE: memory
  # Enable advanced caching
  CACHE_VERSION: v2

jobs:
  # Quick syntax and style validation
  lint:
    name: Lint & Code Quality
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit
      
      - name: Run linter
        run: npm run lint --if-present

  # Build and test on multiple Node.js versions in parallel
  build:
    name: Build & Test (Node ${{ matrix.node-version }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        node-version: ['18.x', '20.x', '22.x']
        os: [ubuntu-latest]
        include:
          - node-version: '20.x'
            os: windows-latest
          - node-version: '20.x'
            os: macos-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit
      
      - name: Build project
        run: npm run build --if-present
      
      - name: Run tests
        run: npm test --if-present
        env:
          NODE_ENV: test
      
      - name: Upload coverage reports
        if: matrix.node-version == '20.x' && matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/
          retention-days: 7

  # Security and dependency analysis
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit
      
      - name: Run security audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

  # Generate and attest build artifacts
  attest:
    name: Generate Attestations
    runs-on: ubuntu-latest
    needs: [lint, build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit
      
      - name: Build project
        run: npm run build --if-present
      
      - name: Attest build provenance
        uses: actions/attest-build-provenance@v2
        if: hashFiles('dist/**') != ''
        with:
          subject-path: 'dist/**/*'
