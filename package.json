{
  "name": "llm",
  "version": "2.0.0-ultra-performance",
  "description": "LLM integration project with Claude, A2A, and browser history access - ULTRA-PERFORMANCE OPTIMIZED with Advanced Memory Pool and Intelligent Connection Management",
  "main": "server.js",
  "type": "module",
  "scripts": {
    "start": "npm run optimize:concurrent && npm run build:tools && node server.js",
    "start:enhanced": "npm run optimize:concurrent && node server-enhanced.js",
    "start:concurrent": "npm run concurrent:optimize && node --expose-gc --max-old-space-size=4096 server-enhanced.js",
    "start:server": "npm run optimize:autonomous && npm run build:tools && node server.js",
    "start:history": "npm run build && PORT=3001 node server.js",
    "start:bridge": "node src/ai-bridge.js",
    "start:optimized": "node src/ai-bridge-optimized.js",
    "start:ultra-bridge": "npm run ultra:validate && node --expose-gc src/ultra-performance/enhanced-ai-bridge.js",
    "start:orchestrator": "tsx orchestrator.ts",
    "start:a2a": "tsx src/a2a-agent-server.ts",
    "start:production": "npm run concurrent:full && node --expose-gc server-enhanced.js",
    "start:ultra": "npm run concurrent:breakthrough && node --expose-gc --max-old-space-size=8192 server-enhanced.js",
    "start:ultra-performance": "npm run ultra:validate && npm run ultra:optimize && node --expose-gc --max-old-space-size=8192 src/ultra-performance/enhanced-ai-bridge.js",
    "concurrent:optimize": "node src/concurrent-node-optimizer.js",
    "concurrent:python": "python3 src/concurrent-performance-optimizer.py",
    "concurrent:full": "npm run concurrent:python && npm run concurrent:optimize",
    "concurrent:breakthrough": "npm run concurrent:full && npm run ultra:optimize && npm run breakthrough:optimize",
    "concurrent:realtime": "curl -X POST http://localhost:8080/optimize/realtime -H 'Content-Type: application/json' -d '{\"action\":\"start\",\"duration\":300}'",
    "ultra:optimize": "node scripts/ultra-optimization-nexus.js",
    "ultra:validate": "node --expose-gc scripts/ultra-performance-validator.js",
    "ultra:memory-pool": "node --expose-gc -e \"import('./src/ultra-performance/advanced-memory-pool.js').then(m => console.log('Memory Pool Stats:', m.default.getStats()))\"",
    "ultra:connection-pool": "node --expose-gc -e \"import('./src/ultra-performance/intelligent-connection-pool.js').then(m => { const pool = new m.default(); console.log('Connection Pool Created'); })\"",
    "ultra:full-suite": "npm run ultra:validate && npm run ultra:optimize && npm run performance:ultra",
    "breakthrough:optimize": "node scripts/breakthrough-system-optimizer.js",
    "chat": "node src/chat-launcher.js",
    "bridge:server": "node src/ai-bridge.js",
    "bridge:client": "node src/ai-bridge-client.js",
    "bridge:optimized": "node src/ai-bridge-optimized.js",
    "bridge:ultra": "npm run ultra:validate && node src/ultra-performance/enhanced-ai-bridge.js",
    "bridge:selection-wiring": "node src/wiring/selection-wiring.js",
    "agents:coordinator": "node src/agents/agent-coordinator.js",
    "build": "npm run build:tools && tsc",
    "build:tools": "node scripts/build-tools.js",
    "build:optimized": "npm run build:tools && tsc --build --incremental",
    "build:production": "npm run concurrent:optimize && npm run build:optimized",
    "build:ultra": "npm run concurrent:breakthrough && npm run build:optimized --max-old-space-size=8192",
    "prebuild": "npm run build:tools",
    "optimize": "node scripts/optimize-project.js",
    "optimize:autonomous": "node scripts/autonomous-performance-optimizer.js",
    "optimize:concurrent": "npm run concurrent:optimize",
    "optimize:full": "npm run concurrent:full && npm run optimize && npm run lint && npm run format && npm run test:coverage",
    "optimize:text-selection": "node scripts/optimize-text-selection.js",
    "optimize:current-tab": "node scripts/optimize-text-selection.js",
    "optimize:memory": "node --expose-gc scripts/autonomous-performance-optimizer.js",
    "optimize:breakthrough": "npm run concurrent:breakthrough",
    "optimize:ultra-memory": "node --expose-gc -e \"import('./src/ultra-performance/advanced-memory-pool.js').then(m => { console.log('Starting memory optimization...'); setTimeout(() => console.log('Memory Pool Stats:', m.default.getStats()), 5000); })\"",
    "performance:analyze": "node scripts/optimize-text-selection.js",
    "performance:monitor": "node scripts/performance-optimizer.js",
    "performance:report": "npm run concurrent:python && node scripts/autonomous-performance-optimizer.js",
    "performance:ultra": "npm run concurrent:full && node scripts/ultra-optimization-nexus.js",
    "performance:breakthrough": "npm run concurrent:breakthrough",
    "performance:concurrent": "curl -s http://localhost:8080/metrics/concurrent | jq .",
    "performance:validate-ultra": "npm run ultra:validate",
    "cloud-sql:setup": "node scripts/cloud-sql-setup.js",
    "cloud-sql:persist": "node scripts/cloud-sql-setup.js",
    "test:bridge": "cross-env NODE_OPTIONS=--experimental-vm-modules node --test tests/ai-bridge.test.js",
    "test:ultra": "npm run ultra:validate",
    "test:memory-pool": "node --expose-gc scripts/ultra-performance-validator.js",
    "pretest": "npm run build --silent",
    "test": "cross-env NODE_OPTIONS=--experimental-vm-modules node --test tests || echo 'No tests found'",
    "pretest:watch": "npm run build --silent",
    "test:watch": "cross-env NODE_OPTIONS=--experimental-vm-modules node --test --watch tests",
    "test:jest": "jest",
    "test:coverage": "cross-env NODE_OPTIONS=--experimental-vm-modules node --test --experimental-test-coverage tests",
    "test:performance": "npm run performance:concurrent && npm run test:coverage",
    "test:concurrent": "npm run concurrent:optimize && npm run test",
    "test:ultra-performance": "npm run ultra:full-suite",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "format": "prettier --write \"**/*.{js,json,md}\"",
    "validate": "npm run lint && npm run test",
    "validate:full": "npm run concurrent:optimize && npm run validate",
    "validate:ultra": "npm run concurrent:breakthrough && npm run validate:full && npm run ultra:validate",
    "dev": "npm run build:tools && node --watch server.js",
    "dev:concurrent": "npm run concurrent:optimize && node --watch --expose-gc server-enhanced.js",
    "dev:optimized": "npm run optimize:autonomous && node --watch --expose-gc src/ai-bridge-optimized.js",
    "dev:performance": "npm run concurrent:optimize && node --watch --expose-gc server-enhanced.js",
    "dev:ultra": "npm run concurrent:breakthrough && node --watch --expose-gc --max-old-space-size=8192 server-enhanced.js",
    "dev:ultra-performance": "npm run ultra:validate && node --watch --expose-gc --max-old-space-size=8192 src/ultra-performance/enhanced-ai-bridge.js",
    "clean": "rm -rf dist node_modules",
    "clean:cache": "rm -rf dist",
    "clean:reports": "rm -f *optimization*report*.json build-report.json reports/*.json",
    "clean:concurrent": "rm -f concurrent_*_report.json",
    "clean:all": "npm run clean:cache && npm run clean:reports && npm run clean:concurrent",
    "reset": "npm run clean && npm install",
    "deploy:prepare": "npm run concurrent:full && npm run build:production",
    "deploy:ultra": "npm run concurrent:breakthrough && npm run build:ultra",
    "deploy:concurrent": "npm run concurrent:breakthrough && npm run deploy:ultra",
    "deploy:ultra-performance": "npm run ultra:full-suite && npm run deploy:ultra",
    "health:check": "curl -s http://localhost:8080/health | jq .",
    "health:concurrent": "curl -s http://localhost:8080/metrics/concurrent | jq .",
    "health:ultra": "curl -s http://localhost:8080/api/analytics | jq .",
    "monitoring:start": "npm run performance:concurrent && npm run performance:monitor",
    "monitoring:concurrent": "watch -n 5 'npm run health:concurrent'",
    "monitoring:ultra": "watch -n 5 'npm run health:ultra'",
    "system:optimize": "npm run concurrent:breakthrough",
    "system:concurrent": "npm run concurrent:full && npm run monitoring:concurrent",
    "system:ultra-performance": "npm run ultra:full-suite && npm run monitoring:ultra",
    "production:full": "npm run deploy:concurrent && npm run monitoring:start && npm run health:check",
    "production:concurrent": "npm run start:ultra",
    "production:ultra-performance": "npm run deploy:ultra-performance && npm run start:ultra-performance"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0",
    "python": ">=3.8.0"
  },
  "keywords": [
    "claude",
    "llm",
    "ai",
    "mcp",
    "agent",
    "automation",
    "optimization",
    "browser-history",
    "performance",
    "autonomous",
    "typescript",
    "express",
    "sqlite",
    "breakthrough",
    "enterprise",
    "ultra-performance",
    "concurrent",
    "parallel-processing",
    "worker-threads",
    "python-integration",
    "concurrent-futures",
    "multi-threading",
    "real-time-optimization",
    "memory-pool",
    "connection-pool",
    "machine-learning",
    "predictive-scaling",
    "intelligent-caching"
  ],
  "author": "scarmonit-creator",
  "license": "ISC",
  "dependencies": {
    "@anthropic-ai/sdk": "^0.32.1",
    "@modelcontextprotocol/sdk": "^1.0.4",
    "better-sqlite3": "^11.8.1",
    "cors": "^2.8.5",
    "dotenv": "^16.4.7",
    "express": "^4.21.2",
    "fs-extra": "^11.2.0",
    "zod": "^3.24.1",
    "compression": "^1.7.4",
    "helmet": "^8.0.0",
    "express-rate-limit": "^7.4.1",
    "lru-cache": "^11.0.2",
    "winston": "^3.17.0",
    "ws": "^8.14.2"
  },
  "devDependencies": {
    "@eslint/js": "^9.17.0",
    "@types/better-sqlite3": "^7.6.12",
    "@types/cors": "^2.8.17",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.10.2",
    "@types/compression": "^1.7.5",
    "@types/ws": "^8.5.8",
    "cross-env": "^7.0.3",
    "eslint": "^9.17.0",
    "eslint-config-prettier": "^9.1.0",
    "globals": "^15.13.0",
    "jest": "^29.7.0",
    "prettier": "^3.4.2",
    "tsx": "^4.19.2",
    "typescript": "^5.7.2"
  },
  "optionalDependencies": {
    "psutil": "*"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/scarmonit-creator/LLM.git"
  },
  "bugs": {
    "url": "https://github.com/scarmonit-creator/LLM/issues"
  },
  "homepage": "https://github.com/scarmonit-creator/LLM#readme",
  "performance": {
    "targets": {
      "improvement": "98%+",
      "memory_reduction": "40%+",
      "cache_hit_rate": "97%+",
      "response_time": "<62ms",
      "build_time": "<500ms",
      "concurrent_throughput": ">1000rps",
      "parallel_efficiency": "95%+",
      "connection_efficiency": "30%+",
      "memory_pool_reuse": "80%+"
    },
    "optimization": {
      "ultra_nexus": true,
      "breakthrough_system": true,
      "enterprise_grade": true,
      "production_ready": true,
      "concurrent_futures": true,
      "worker_threads": true,
      "python_integration": true,
      "real_time_monitoring": true,
      "parallel_processing": true,
      "multi_threading": true,
      "advanced_memory_pool": true,
      "intelligent_connection_pool": true,
      "predictive_scaling": true,
      "ml_optimization": true
    },
    "ultra_features": {
      "advanced_memory_pool": "enabled",
      "intelligent_connection_pool": "enabled",
      "predictive_allocation": "enabled",
      "adaptive_scaling": "enabled",
      "query_batching": "enabled",
      "zero_copy_operations": "enabled",
      "gc_optimization": "enabled",
      "memory_pressure_monitoring": "enabled",
      "connection_health_monitoring": "enabled",
      "performance_analytics": "enabled",
      "real_time_optimization": "enabled"
    },
    "concurrent_features": {
      "python_concurrent_futures": "enabled",
      "node_worker_threads": "enabled",
      "parallel_optimization": "enabled",
      "real_time_monitoring": "enabled",
      "background_optimization": "enabled",
      "memory_optimization": "concurrent",
      "file_system_optimization": "concurrent",
      "network_optimization": "concurrent",
      "database_optimization": "concurrent",
      "build_system_optimization": "concurrent"
    }
  },
  "concurrent": {
    "python_requirements": [
      "psutil>=5.9.0",
      "concurrent.futures"
    ],
    "worker_threads": {
      "max_workers": "cpu_count + 4",
      "timeout": "30s",
      "memory_limit": "512MB"
    },
    "optimization_schedule": {
      "memory": "30s",
      "filesystem": "300s",
      "database": "600s",
      "full_suite": "3600s",
      "ultra_validation": "300s"
    }
  },
  "ultra_performance": {
    "memory_pool": {
      "max_pool_size": 1000,
      "preallocation_size": 100,
      "gc_threshold": 0.85,
      "adaptive_scaling": true,
      "predictive_allocation": true
    },
    "connection_pool": {
      "min_connections": 2,
      "max_connections": 20,
      "acquire_timeout": 10000,
      "idle_timeout": 30000,
      "connection_ttl": 3600000,
      "predictive_scaling": true,
      "query_batching": true
    },
    "validation": {
      "memory_reduction_target": 19,
      "response_time_improvement_target": 20,
      "cache_hit_rate_improvement_target": 5,
      "connection_efficiency_target": 30,
      "total_system_improvement_target": 14
    }
  }
}