{
  "name": "llm-framework",
  "version": "2.0.0",
  "description": "Comprehensive Node.js framework for multi-provider LLM orchestration with advanced memory optimization, security hardening, and MCP server integration",
  "main": "dist/index.js",
  "type": "module",
  "engines": {
    "node": ">=18.0.0"
  },
  "scripts": {
    "start": "npm run build:tools && node server.js",
    "start:server": "npm run build:tools && node server.js",
    "start:history": "npm run build && PORT=3001 node server.js",
    "start:bridge": "node src/ai-bridge.js",
    "start:optimized": "node src/ai-bridge-optimized.js",
    "start:orchestrator": "tsx orchestrator.ts",
    "start:a2a": "tsx src/a2a-agent-server.ts",
    "chat": "node src/chat-launcher.js",
    "bridge:server": "node src/ai-bridge.js",
    "bridge:client": "node src/ai-bridge-client.js",
    "bridge:optimized": "node src/ai-bridge-optimized.js",
    "bridge:selection-wiring": "node src/wiring/selection-wiring.js",
    "agents:coordinator": "node src/agents/agent-coordinator.js",
    "build": "npm run build:tools && tsc",
    "build:tools": "node scripts/build-tools.js",
    "build:optimized": "npm run build:tools && tsc --build --incremental",
    "build:fast": "node -r tsx/register src/performance/ultra-fast-build.ts",
    "build:ultra": "node --expose-gc dist/performance/ultra-fast-build.js",
    "prebuild": "npm run build:tools",
    "optimize": "node scripts/optimize-project.js",
    "optimize:full": "npm run optimize && npm run lint && npm run format && npm run test:coverage",
    "optimize:text-selection": "node scripts/optimize-text-selection.js",
    "optimize:current-tab": "node scripts/optimize-text-selection.js",
    "performance:analyze": "node scripts/optimize-text-selection.js",
    "performance:monitor": "node scripts/performance-optimizer.js",
    "memory:optimize": "node --expose-gc dist/memory/advanced-memory-manager.js",
    "memory:analyze": "node --inspect --expose-gc dist/scripts/memory-analysis.js",
    "memory:test": "node --expose-gc -e \"const m=require('./dist/memory/advanced-memory-manager.js'); m.getMemoryManager().optimize().then(r=>console.log('Optimized:',r))\"",
    "security:audit": "node dist/extensions/security/security-manager.js",
    "security:test": "npm audit && node dist/tests/security-tests.js",
    "cache:optimize": "node dist/performance/multi-tier-cache.js",
    "cache:test": "node -e \"const c=require('./dist/performance/multi-tier-cache.js'); c.getCache().optimize().then(r=>console.log('Cache optimized:',r))\"",
    "mcp:server": "node dist/mcp-server/server.js",
    "mcp:test": "node dist/tests/mcp-server-tests.js",
    "mcp:start": "tsx src/mcp-server/server.ts",
    "cloud-sql:setup": "node scripts/cloud-sql-setup.js",
    "cloud-sql:persist": "node scripts/cloud-sql-setup.js",
    "test:bridge": "cross-env NODE_OPTIONS=--experimental-vm-modules node --test tests/ai-bridge.test.js",
    "pretest": "npm run build --silent",
    "test": "cross-env NODE_OPTIONS=--experimental-vm-modules node --test tests || echo 'No tests found'",
    "pretest:watch": "npm run build --silent",
    "test:watch": "cross-env NODE_OPTIONS=--experimental-vm-modules node --test --watch tests",
    "test:jest": "jest",
    "test:coverage": "cross-env NODE_OPTIONS=--experimental-vm-modules node --test --experimental-test-coverage tests",
    "performance": "node dist/scripts/performance-benchmark.js",
    "performance:watch": "nodemon --exec 'npm run performance'",
    "health:check": "curl -f http://localhost:8080/health || exit 1",
    "setup:deps": "npm ci && npm run build",
    "setup:dev": "npm install && npm run build && npm run test",
    "docker:build": "docker build -t llm-framework .",
    "docker:run": "docker run -p 8080:8080 llm-framework",
    "deploy:prepare": "npm run test && npm run build && npm run security:audit",
    "docs:generate": "typedoc --out docs src",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "format": "prettier --write \"**/*.{js,json,md}\"",
    "validate": "npm run lint && npm run test",
    "dev": "node --watch server.js",
    "dev:optimized": "node --watch src/ai-bridge-optimized.js",
    "clean": "rm -rf dist node_modules .build-cache .cache coverage",
    "clean:cache": "rm -rf dist .build-cache .cache",
    "reset": "npm run clean && npm install"
  },
  "keywords": [
    "llm",
    "ai",
    "claude",
    "ollama",
    "rag",
    "chromadb",
    "browser-history",
    "mcp-server",
    "performance-optimization",
    "memory-management",
    "security-hardening",
    "multi-tier-cache",
    "typescript",
    "nodejs",
    "optimization",
    "automation"
  ],
  "author": "scarmonit-creator",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/scarmonit-creator/LLM.git"
  },
  "bugs": {
    "url": "https://github.com/scarmonit-creator/LLM/issues"
  },
  "homepage": "https://github.com/scarmonit-creator/LLM#readme",
  "dependencies": {
    "@anthropic-ai/sdk": "^0.32.1",
    "@modelcontextprotocol/sdk": "^1.0.4",
    "better-sqlite3": "^11.8.1",
    "cors": "^2.8.5",
    "dotenv": "^16.4.7",
    "express": "^4.21.2",
    "fs-extra": "^11.2.0",
    "zod": "^3.24.1",
    "helmet": "^7.1.0",
    "compression": "^1.7.4",
    "ws": "^8.17.0",
    "sharp": "^0.33.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.17.0",
    "@types/better-sqlite3": "^7.6.12",
    "@types/cors": "^2.8.17",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.10.2",
    "@types/ws": "^8.5.0",
    "@types/compression": "^1.7.0",
    "cross-env": "^7.0.3",
    "eslint": "^9.17.0",
    "eslint-config-prettier": "^9.1.0",
    "globals": "^15.13.0",
    "jest": "^29.7.0",
    "prettier": "^3.4.2",
    "tsx": "^4.19.2",
    "typescript": "^5.7.2",
    "rimraf": "^5.0.0",
    "nodemon": "^3.1.0",
    "webpack": "^5.91.0",
    "webpack-cli": "^5.1.0",
    "ts-loader": "^9.5.0",
    "terser-webpack-plugin": "^5.3.0",
    "typedoc": "^0.25.0",
    "@typescript-eslint/eslint-plugin": "^7.0.0",
    "@typescript-eslint/parser": "^7.0.0",
    "ts-jest": "^29.1.0"
  },
  "peerDependencies": {
    "ollama": "^0.5.0"
  },
  "optionalDependencies": {
    "firebase-admin": "^12.0.0"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "testMatch": [
      "**/__tests__/**/*.ts",
      "**/?(*.)+(spec|test).ts"
    ],
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!src/**/*.d.ts",
      "!src/**/__tests__/**",
      "!src/**/tests/**"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    }
  },
  "eslintConfig": {
    "extends": [
      "@typescript-eslint/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "plugins": [
      "@typescript-eslint"
    ],
    "rules": {
      "@typescript-eslint/no-unused-vars": "error",
      "@typescript-eslint/no-explicit-any": "warn",
      "@typescript-eslint/explicit-function-return-type": "warn"
    }
  },
  "prettier": {
    "semi": true,
    "trailingComma": "es5",
    "singleQuote": true,
    "printWidth": 100,
    "tabWidth": 2,
    "useTabs": false
  },
  "nodemonConfig": {
    "watch": [
      "src"
    ],
    "ext": "ts,js",
    "ignore": [
      "dist",
      "node_modules",
      "coverage",
      ".build-cache"
    ],
    "exec": "npm run build:fast && npm start"
  },
  "files": [
    "dist",
    "README.md",
    "LICENSE",
    "package.json"
  ]
}