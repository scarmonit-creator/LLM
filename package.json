{
  "name": "llm",
  "version": "2.2.0-python-optimized",
  "description": "LLM integration project with Nitric cloud-native optimization, Python admin dashboard, and ultra-fast search engine",
  "main": "server.js",
  "type": "module",
  "scripts": {
    "start": "npm run optimize:concurrent && npm run build:tools && node server.js",
    "start:enhanced": "npm run optimize:concurrent && node server-enhanced.js",
    "start:python": "python3 src/api/fastapi-server.py",
    "start:admin": "streamlit run src/admin/streamlit-dashboard.py --server.port 8501",
    "start:full-stack": "concurrently \"npm start\" \"npm run start:python\" \"npm run start:admin\"",
    "start:nitric": "cd src/nitric && npm install && nitric start",
    "start:nitric-local": "cd src/nitric && npm run dev",
    "start:concurrent": "npm run concurrent:optimize && node --expose-gc --max-old-space-size=4096 server-enhanced.js",
    "start:server": "npm run optimize:autonomous && npm run build:tools && node server.js",
    "start:history": "npm run build && PORT=3001 node server.js",
    "start:bridge": "node src/ai-bridge.js",
    "start:optimized": "node src/ai-bridge-optimized.js",
    "start:orchestrator": "tsx orchestrator.ts",
    "start:a2a": "tsx src/a2a-agent-server.ts",
    "start:production": "npm run concurrent:full && node --expose-gc server-enhanced.js",
    "start:ultra": "npm run concurrent:breakthrough && node --expose-gc --max-old-space-size=8192 server-enhanced.js",
    "python:install": "pip3 install -r requirements.txt",
    "python:upgrade": "pip3 install -r requirements.txt --upgrade",
    "python:admin": "streamlit run src/admin/streamlit-dashboard.py --server.port 8501 --server.address 0.0.0.0",
    "python:async-service": "python3 src/optimization/async-service.py",
    "python:search-index": "python3 src/search/whoosh-engine.py index",
    "python:search": "python3 src/search/whoosh-engine.py search",
    "python:optimize-search": "python3 src/search/whoosh-engine.py optimize",
    "admin:start": "npm run python:install && npm run python:admin",
    "admin:dashboard": "streamlit run src/admin/streamlit-dashboard.py --server.port 8501",
    "admin:dev": "streamlit run src/admin/streamlit-dashboard.py --server.port 8501 --server.runOnSave true",
    "search:init": "python3 src/search/whoosh-engine.py index",
    "search:optimize": "python3 src/search/whoosh-engine.py optimize",
    "search:stats": "python3 src/search/whoosh-engine.py stats",
    "optimization:async": "python3 src/optimization/async-service.py",
    "optimization:start": "concurrently \"npm run optimization:async\" \"npm run concurrent:optimize\"",
    "nitric:install": "npm install -g @nitric/cli",
    "nitric:init": "cd src/nitric && npm install",
    "nitric:dev": "nitric start",
    "nitric:build": "nitric build",
    "nitric:deploy": "nitric up --provider aws",
    "nitric:deploy:aws": "nitric up --provider aws",
    "nitric:deploy:azure": "nitric up --provider azure",
    "nitric:deploy:gcp": "nitric up --provider gcp",
    "nitric:deploy:multi": "NITRIC_PROVIDERS=aws,azure,gcp nitric up",
    "nitric:test": "curl -f http://localhost:4001/health && curl -f http://localhost:4001/history",
    "build:website": "node -e \"const fs=require('fs'),path=require('path');const src='website',out='website/dist';console.log('Building website...');try{fs.rmSync(out,{recursive:true,force:true})}catch(e){}fs.mkdirSync(out,{recursive:true});const copy=(s,d)=>{const st=fs.statSync(s);if(st.isDirectory()){fs.mkdirSync(d,{recursive:true});for(const f of fs.readdirSync(s)){copy(path.join(s,f),path.join(d,f))}}else{let data=fs.readFileSync(s,'utf8');if(s.endsWith('.html')){data=data.replace(/\\s+/g,' ').replace(/\\n\\s*/g,'').replace(/<!--.*?-->/g,'').trim()}if(s.endsWith('.css')){data=data.replace(/\\s{2,}/g,' ').replace(/\\/\\*.*?\\*\\//g,'').replace(/\\n/g,'').trim()}if(s.endsWith('.js')){data=data.replace(/\\s{2,}/g,' ').replace(/\\n\\s*/g,' ').trim()}fs.writeFileSync(d,data,'utf8')}};copy(src,out);console.log('âœ… Website built successfully to',out);console.log('ðŸ“¦ Files optimized: HTML minified, CSS/JS compressed');console.log('ðŸš€ Ready for Nitric deployment');\"",
    "dev:website": "python3 -m http.server 4322 --directory website 2>/dev/null || python -m http.server 4322 --directory website",
    "test:website": "npm run build:website && echo 'Testing built website...' && ls -la website/dist/",
    "concurrent:optimize": "node src/concurrent-node-optimizer.js",
    "concurrent:python": "python3 src/concurrent-performance-optimizer.py",
    "concurrent:full": "npm run concurrent:python && npm run concurrent:optimize",
    "concurrent:breakthrough": "npm run concurrent:full && npm run ultra:optimize && npm run breakthrough:optimize",
    "concurrent:realtime": "curl -X POST http://localhost:8080/optimize/realtime -H 'Content-Type: application/json' -d '{\"action\":\"start\",\"duration\":300}'",
    "ultra:optimize": "node scripts/ultra-optimization-nexus.js",
    "breakthrough:optimize": "node scripts/breakthrough-system-optimizer.js",
    "chat": "node src/chat-launcher.js",
    "bridge:server": "node src/ai-bridge.js",
    "bridge:client": "node src/ai-bridge-client.js",
    "bridge:optimized": "node src/ai-bridge-optimized.js",
    "bridge:selection-wiring": "node src/wiring/selection-wiring.js",
    "agents:coordinator": "node src/agents/agent-coordinator.js",
    "build": "npm run build:tools && tsc",
    "build:tools": "node scripts/build-tools.js",
    "build:optimized": "npm run build:tools && tsc --build --incremental",
    "build:production": "npm run concurrent:optimize && npm run build:optimized && npm run build:website",
    "build:ultra": "npm run concurrent:breakthrough && npm run build:optimized --max-old-space-size=8192 && npm run build:website",
    "build:python": "python3 -m compileall src/",
    "prebuild": "npm run build:tools",
    "optimize": "node scripts/optimize-project.js",
    "optimize:autonomous": "node scripts/autonomous-performance-optimizer.js",
    "optimize:concurrent": "npm run concurrent:optimize",
    "optimize:nitric": "npm run nitric:build && npm run nitric:deploy",
    "optimize:full": "npm run concurrent:full && npm run optimize && npm run lint && npm run format && npm run test:coverage",
    "optimize:text-selection": "node scripts/optimize-text-selection.js",
    "optimize:current-tab": "node scripts/optimize-text-selection.js",
    "optimize:memory": "node --expose-gc scripts/autonomous-performance-optimizer.js",
    "optimize:breakthrough": "npm run concurrent:breakthrough",
    "optimize:python": "python3 src/optimization/async-service.py",
    "optimize:search": "npm run python:optimize-search",
    "performance:analyze": "node scripts/optimize-text-selection.js",
    "performance:monitor": "node scripts/performance-optimizer.js",
    "performance:report": "npm run concurrent:python && node scripts/autonomous-performance-optimizer.js",
    "performance:ultra": "npm run concurrent:full && node scripts/ultra-optimization-nexus.js",
    "performance:breakthrough": "npm run concurrent:breakthrough",
    "performance:concurrent": "curl -s http://localhost:8080/metrics/concurrent | jq .",
    "performance:nitric": "curl -s http://localhost:4001/metrics | jq .",
    "performance:python": "curl -s http://localhost:8081/metrics | jq .",
    "cloud-sql:setup": "node scripts/cloud-sql-setup.js",
    "cloud-sql:persist": "node scripts/cloud-sql-setup.js",
    "test:bridge": "cross-env NODE_OPTIONS=--experimental-vm-modules node --test tests/ai-bridge.test.js",
    "pretest": "npm run build --silent",
    "test": "cross-env NODE_OPTIONS=--experimental-vm-modules node --test tests || echo 'No tests found'",
    "pretest:watch": "npm run build --silent",
    "test:watch": "cross-env NODE_OPTIONS=--experimental-vm-modules node --test --watch tests",
    "test:jest": "jest",
    "test:coverage": "cross-env NODE_OPTIONS=--experimental-vm-modules node --test --experimental-test-coverage tests",
    "test:performance": "npm run performance:concurrent && npm run test:coverage",
    "test:concurrent": "npm run concurrent:optimize && npm run test",
    "test:nitric": "npm run nitric:test",
    "test:python": "python3 -m pytest tests/python/ -v",
    "test:search": "python3 src/search/whoosh-engine.py search test",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "lint:python": "python3 -m ruff check src/ --fix",
    "format": "prettier --write \"**/*.{js,json,md}\"",
    "format:python": "python3 -m black src/",
    "format:all": "npm run format && npm run format:python",
    "validate": "npm run lint && npm run test",
    "validate:full": "npm run concurrent:optimize && npm run validate",
    "validate:ultra": "npm run concurrent:breakthrough && npm run validate:full",
    "validate:nitric": "npm run nitric:test && npm run validate",
    "validate:python": "npm run lint:python && npm run test:python",
    "validate:complete": "npm run validate:python && npm run validate:ultra",
    "dev": "npm run build:tools && node --watch server.js",
    "dev:concurrent": "npm run concurrent:optimize && node --watch --expose-gc server-enhanced.js",
    "dev:optimized": "npm run optimize:autonomous && node --watch --expose-gc src/ai-bridge-optimized.js",
    "dev:performance": "npm run concurrent:optimize && node --watch --expose-gc server-enhanced.js",
    "dev:ultra": "npm run concurrent:breakthrough && node --watch --expose-gc --max-old-space-size=8192 server-enhanced.js",
    "dev:nitric": "npm run nitric:dev",
    "dev:python": "python3 src/api/fastapi-server.py",
    "dev:admin": "npm run admin:dev",
    "dev:search": "python3 src/search/whoosh-engine.py",
    "dev:full-stack": "concurrently \"npm run dev:ultra\" \"npm run dev:python\" \"npm run dev:admin\" \"npm run optimization:async\"",
    "clean": "rm -rf dist node_modules",
    "clean:cache": "rm -rf dist",
    "clean:website": "rm -rf website/dist",
    "clean:python": "find . -name '__pycache__' -type d -exec rm -rf {} + && find . -name '*.pyc' -delete",
    "clean:search": "rm -rf search_index/",
    "clean:reports": "rm -f *optimization*report*.json build-report.json reports/*.json",
    "clean:concurrent": "rm -f concurrent_*_report.json",
    "clean:nitric": "rm -f nitric-deployment-report.json",
    "clean:all": "npm run clean:cache && npm run clean:website && npm run clean:python && npm run clean:search && npm run clean:reports && npm run clean:concurrent && npm run clean:nitric",
    "reset": "npm run clean && npm install && npm run python:install",
    "deploy:prepare": "npm run concurrent:full && npm run build:production",
    "deploy:ultra": "npm run concurrent:breakthrough && npm run build:ultra",
    "deploy:concurrent": "npm run concurrent:breakthrough && npm run deploy:ultra",
    "deploy:nitric": "npm run build:website && npm run nitric:deploy",
    "deploy:production": "npm run deploy:nitric",
    "deploy:python": "npm run python:upgrade && npm run build:python",
    "deploy:full-stack": "npm run deploy:python && npm run deploy:production",
    "health:check": "curl -s http://localhost:8080/health | jq .",
    "health:concurrent": "curl -s http://localhost:8080/metrics/concurrent | jq .",
    "health:nitric": "curl -s http://localhost:4001/health | jq .",
    "health:python": "curl -s http://localhost:8081/health | jq .",
    "health:admin": "curl -s http://localhost:8501/health | jq . || echo 'Admin dashboard health check via browser at http://localhost:8501'",
    "health:all": "npm run health:check && npm run health:python && npm run health:nitric",
    "monitoring:start": "npm run performance:concurrent && npm run performance:monitor",
    "monitoring:concurrent": "watch -n 5 'npm run health:concurrent'",
    "monitoring:nitric": "watch -n 5 'npm run health:nitric'",
    "monitoring:python": "watch -n 5 'npm run health:python'",
    "monitoring:admin": "echo 'Admin dashboard available at http://localhost:8501 with auto-refresh enabled'",
    "monitoring:full": "concurrently \"npm run monitoring:concurrent\" \"npm run monitoring:python\" \"npm run monitoring:nitric\"",
    "system:optimize": "npm run concurrent:breakthrough",
    "system:concurrent": "npm run concurrent:full && npm run monitoring:concurrent",
    "system:nitric": "npm run nitric:dev && npm run monitoring:nitric",
    "system:python": "npm run optimization:async && npm run monitoring:python",
    "system:admin": "npm run admin:start",
    "system:full-stack": "npm run start:full-stack",
    "production:full": "npm run deploy:concurrent && npm run monitoring:start && npm run health:check",
    "production:concurrent": "npm run start:ultra",
    "production:nitric": "npm run deploy:nitric && npm run monitoring:nitric",
    "production:python": "npm run deploy:python && npm run monitoring:python",
    "production:enterprise": "npm run production:python && npm run production:concurrent && npm run production:nitric"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0",
    "python": ">=3.8.0"
  },
  "keywords": [
    "claude",
    "llm",
    "ai",
    "mcp",
    "agent",
    "automation",
    "optimization",
    "browser-history",
    "performance",
    "autonomous",
    "typescript",
    "express",
    "sqlite",
    "breakthrough",
    "enterprise",
    "ultra-performance",
    "concurrent",
    "parallel-processing",
    "worker-threads",
    "python-integration",
    "concurrent-futures",
    "multi-threading",
    "real-time-optimization",
    "nitric",
    "cloud-native",
    "serverless",
    "multi-cloud",
    "infrastructure-as-code",
    "auto-scaling",
    "custom-domain",
    "cdn-optimization",
    "asset-minification",
    "streamlit",
    "fastapi",
    "async",
    "uvloop",
    "admin-dashboard",
    "whoosh",
    "search-engine",
    "python-admin",
    "asyncio",
    "aiohttp",
    "awesome-python"
  ],
  "author": "scarmonit-creator",
  "license": "ISC",
  "dependencies": {
    "@anthropic-ai/sdk": "^0.32.1",
    "@modelcontextprotocol/sdk": "^1.0.4",
    "@nitric/sdk": "^1.0.0",
    "better-sqlite3": "^11.8.1",
    "cors": "^2.8.5",
    "dotenv": "^16.4.7",
    "express": "^4.21.2",
    "fs-extra": "^11.2.0",
    "zod": "^3.24.1",
    "compression": "^1.7.4",
    "helmet": "^8.0.0",
    "express-rate-limit": "^7.4.1",
    "lru-cache": "^11.0.2",
    "winston": "^3.17.0",
    "concurrently": "^8.2.2"
  },
  "devDependencies": {
    "@eslint/js": "^9.17.0",
    "@nitric/cli": "^1.0.0",
    "@types/better-sqlite3": "^7.6.12",
    "@types/cors": "^2.8.17",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.10.2",
    "@types/compression": "^1.7.5",
    "cross-env": "^7.0.3",
    "eslint": "^9.17.0",
    "eslint-config-prettier": "^9.1.0",
    "globals": "^15.13.0",
    "jest": "^29.7.0",
    "prettier": "^3.4.2",
    "tsx": "^4.19.2",
    "typescript": "^5.7.2"
  },
  "optionalDependencies": {
    "psutil": "*"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/scarmonit-creator/LLM.git"
  },
  "bugs": {
    "url": "https://github.com/scarmonit-creator/LLM/issues"
  },
  "homepage": "https://github.com/scarmonit-creator/LLM#readme",
  "python": {
    "version": "3.8+",
    "requirements_file": "requirements.txt",
    "features": {
      "admin_dashboard": "streamlit",
      "async_optimization": "uvloop+asyncio",
      "search_engine": "whoosh",
      "api_server": "fastapi",
      "monitoring": "psutil",
      "data_validation": "pydantic",
      "performance_profiling": "py-spy",
      "caching": "redis",
      "machine_learning": "scikit-learn"
    },
    "services": {
      "admin_port": 8501,
      "api_port": 8081,
      "search_index": "search_index/",
      "optimization_log": "optimization.log"
    }
  },
  "nitric": {
    "version": "2.2.0",
    "framework": "cloud-native",
    "features": {
      "serverless": true,
      "auto_scaling": true,
      "multi_cloud": true,
      "infrastructure_as_code": true,
      "websockets": true,
      "storage_buckets": true,
      "scheduled_tasks": true,
      "secret_management": true,
      "cdn_rewrites": true,
      "global_distribution": true,
      "custom_domain": true,
      "asset_optimization": true,
      "error_pages": true,
      "python_integration": true,
      "admin_dashboard": true,
      "search_engine": true
    },
    "providers": [
      "aws",
      "azure",
      "gcp"
    ],
    "performance_targets": {
      "cold_start": "<200ms",
      "response_time": "<50ms",
      "scaling_time": "<10s",
      "availability": "99.99%",
      "cost_reduction": "90%",
      "build_time": "<30s",
      "asset_compression": "70%",
      "search_response": "<10ms",
      "admin_load_time": "<2s"
    },
    "custom_domain": {
      "domain": "www.scarmonit.com",
      "ssl": "automatic",
      "provider_managed": true
    }
  }
}