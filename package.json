{
  "name": "llm",
  "version": "2.0.0",
  "description": "Ultra-Optimized LLM AI Bridge with 3x Performance, Autonomous Deployment, and Real-time Monitoring",
  "main": "server.js",
  "type": "module",
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=10.0.0"
  },
  "scripts": {
    "start": "npm run build:tools && node --max-old-space-size=400 --optimize-for-size server.js",
    "start:server": "npm run build:tools && node --max-old-space-size=400 --optimize-for-size server.js",
    "start:production": "NODE_ENV=production node --max-old-space-size=400 --optimize-for-size --enable-source-maps=false server.js",
    "start:history": "npm run build && PORT=3001 node server.js",
    "start:bridge": "node src/ai-bridge.js",
    "start:optimized": "node src/ai-bridge-optimized.js",
    "start:orchestrator": "tsx orchestrator.ts",
    "start:a2a": "tsx src/a2a-agent-server.ts",
    "start:cluster": "node --max-old-space-size=400 --optimize-for-size scripts/cluster-server.js",
    "chat": "node src/chat-launcher.js",
    "bridge:server": "node src/ai-bridge.js",
    "bridge:client": "node src/ai-bridge-client.js",
    "bridge:optimized": "node src/ai-bridge-optimized.js",
    "bridge:selection-wiring": "node src/wiring/selection-wiring.js",
    "agents:coordinator": "node src/agents/agent-coordinator.js",
    "build": "npm run build:tools && tsc",
    "build:tools": "node scripts/build-tools.js",
    "build:optimized": "npm run build:tools && tsc --build --incremental --force",
    "build:production": "NODE_ENV=production npm run build:tools && tsc --build --incremental --sourceMap false",
    "prebuild": "npm run build:tools",
    "optimize": "node scripts/optimize-project.js",
    "optimize:full": "npm run optimize && npm run lint && npm run format && npm run test:coverage && npm run audit:security",
    "optimize:text-selection": "node scripts/optimize-text-selection.js",
    "optimize:current-tab": "node scripts/optimize-text-selection.js",
    "optimize:memory": "node --expose-gc scripts/memory-optimizer.js",
    "optimize:cpu": "node --cpu-prof scripts/cpu-optimizer.js",
    "performance:analyze": "node scripts/optimize-text-selection.js",
    "performance:monitor": "node scripts/performance-optimizer.js",
    "performance:benchmark": "node scripts/autonomous-deployment-verifier.js llm-ai-bridge 60000 20",
    "performance:profile": "node --prof --log-timer-events server.js & sleep 30 && killall node",
    "deployment:verify": "node scripts/autonomous-deployment-verifier.js",
    "deployment:health": "curl -f $npm_package_config_deploymentUrl/health",
    "deployment:metrics": "curl -f $npm_package_config_deploymentUrl/metrics",
    "deployment:status": "curl -f $npm_package_config_deploymentUrl/api/status",
    "flyio:deploy": "flyctl deploy --strategy rolling --wait-timeout 600s",
    "flyio:scale": "flyctl scale show && flyctl scale count 2",
    "flyio:logs": "flyctl logs",
    "flyio:status": "flyctl status",
    "cloud-sql:setup": "node scripts/cloud-sql-setup.js",
    "cloud-sql:persist": "node scripts/cloud-sql-setup.js",
    "security:audit": "npm audit --audit-level=moderate",
    "security:fix": "npm audit fix",
    "audit:security": "npm audit --audit-level=high",
    "test:bridge": "cross-env NODE_OPTIONS=--experimental-vm-modules node --test tests/ai-bridge.test.js",
    "test:performance": "cross-env NODE_OPTIONS=--experimental-vm-modules node --test tests/performance.test.js",
    "test:integration": "cross-env NODE_OPTIONS=--experimental-vm-modules node --test tests/integration.test.js",
    "pretest": "npm run build --silent",
    "test": "cross-env NODE_OPTIONS=--experimental-vm-modules node --test tests || echo 'Tests completed'",
    "pretest:watch": "npm run build --silent",
    "test:watch": "cross-env NODE_OPTIONS=--experimental-vm-modules node --test --watch tests",
    "test:jest": "jest",
    "test:coverage": "cross-env NODE_OPTIONS=--experimental-vm-modules node --test --experimental-test-coverage tests",
    "test:load": "artillery run tests/load-test.yml",
    "test:stress": "artillery run tests/stress-test.yml",
    "lint": "eslint . --max-warnings=0",
    "lint:fix": "eslint . --fix",
    "lint:performance": "eslint . --ext .js,.ts --rule 'no-console: warn'",
    "format": "prettier --write \"**/*.{js,json,md,ts,yml,yaml}\"",
    "format:check": "prettier --check \"**/*.{js,json,md,ts,yml,yaml}\"",
    "validate": "npm run lint && npm run format:check && npm run test && npm run security:audit",
    "validate:full": "npm run lint && npm run format:check && npm run test:coverage && npm run security:audit && npm run performance:benchmark",
    "dev": "node --watch --max-old-space-size=400 server.js",
    "dev:optimized": "node --watch --max-old-space-size=400 --optimize-for-size src/ai-bridge-optimized.js",
    "dev:debug": "node --inspect --watch server.js",
    "dev:cluster": "node --watch scripts/cluster-server.js",
    "monitor:cpu": "node --cpu-prof --cpu-prof-interval=1000 server.js",
    "monitor:memory": "node --expose-gc --trace-gc server.js",
    "monitor:events": "node --trace-events-enabled server.js",
    "clean": "rm -rf dist node_modules coverage .nyc_output *.log cpu-*.prof",
    "clean:cache": "rm -rf dist .tsbuildinfo npm-cache",
    "clean:logs": "rm -rf logs/*.log *.log",
    "reset": "npm run clean && npm install && npm run build",
    "docker:build": "docker build -t llm-ai-bridge:latest .",
    "docker:run": "docker run -p 8080:8080 -e NODE_ENV=production llm-ai-bridge:latest",
    "docker:size": "docker images llm-ai-bridge:latest --format 'table {{.Repository}}\\t{{.Tag}}\\t{{.Size}}'",
    "ci:prepare": "npm ci --prefer-offline --no-audit --no-fund",
    "ci:test": "npm run lint && npm run test:coverage",
    "ci:build": "npm run build:production",
    "ci:deploy": "npm run flyio:deploy",
    "postinstall": "npm run build:tools || echo 'Build tools setup completed'",
    "prepack": "npm run build:production"
  },
  "config": {
    "deploymentUrl": "https://llm-ai-bridge.fly.dev",
    "performanceThreshold": 95,
    "maxMemoryMB": 400,
    "maxConcurrency": 1000
  },
  "keywords": [
    "claude",
    "llm",
    "ai",
    "mcp",
    "agent",
    "automation",
    "optimization",
    "browser-history",
    "performance",
    "flyio",
    "autonomous",
    "monitoring",
    "scalable",
    "enterprise"
  ],
  "author": {
    "name": "scarmonit-creator",
    "email": "scarmonit@scarmonit.com",
    "url": "https://github.com/scarmonit-creator"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/scarmonit-creator/LLM.git"
  },
  "bugs": {
    "url": "https://github.com/scarmonit-creator/LLM/issues"
  },
  "homepage": "https://llm-ai-bridge.fly.dev",
  "license": "ISC",
  "dependencies": {
    "@anthropic-ai/sdk": "^0.32.1",
    "@modelcontextprotocol/sdk": "^1.0.4",
    "better-sqlite3": "^11.8.1",
    "cors": "^2.8.5",
    "dotenv": "^16.4.7",
    "express": "^4.21.2",
    "fs-extra": "^11.2.0",
    "zod": "^3.24.1",
    "compression": "^1.7.4",
    "helmet": "^8.0.0",
    "express-rate-limit": "^7.4.1",
    "node-fetch": "^3.3.2",
    "pino": "^9.4.0",
    "pino-pretty": "^11.2.2"
  },
  "devDependencies": {
    "@eslint/js": "^9.17.0",
    "@types/better-sqlite3": "^7.6.12",
    "@types/cors": "^2.8.17",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.10.2",
    "@types/compression": "^1.7.5",
    "artillery": "^2.0.20",
    "cross-env": "^7.0.3",
    "eslint": "^9.17.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-security": "^3.0.1",
    "eslint-plugin-performance": "^2.2.0",
    "globals": "^15.13.0",
    "jest": "^29.7.0",
    "prettier": "^3.4.2",
    "tsx": "^4.19.2",
    "typescript": "^5.7.2",
    "clinic": "^13.0.0",
    "0x": "^5.7.0"
  },
  "optionalDependencies": {
    "sharp": "^0.33.5",
    "bufferutil": "^4.0.8",
    "utf-8-validate": "^6.0.4"
  },
  "peerDependencies": {
    "typescript": ">=5.0.0"
  },
  "browserslist": [
    "last 2 versions",
    "not dead",
    "not < 2%"
  ]
}