{
  "name": "llm",
  "version": "1.3.0",
  "description": "LLM integration project with Claude, A2A, and browser history access - Ultra-Performance Optimized with Critical Error Detection",
  "main": "server.js",
  "type": "module",
  "scripts": {
    "start": "npm run build:tools && node server.js",
    "start:server": "npm run build:tools && node server.js",
    "start:history": "npm run build && PORT=3001 node server.js",
    "start:bridge": "node src/ai-bridge.js",
    "start:optimized": "node src/ai-bridge-optimized.js",
    "start:ultra-optimized": "npm run monitor:start & npm run error-detection:start & node src/optimized-server.js",
    "start:orchestrator": "tsx orchestrator.ts",
    "start:a2a": "tsx src/a2a-agent-server.ts",
    "start:production": "NODE_ENV=production npm run start:ultra-optimized",
    "chat": "node src/chat-launcher.js",
    "bridge:server": "node src/ai-bridge.js",
    "bridge:client": "node src/ai-bridge-client.js",
    "bridge:optimized": "node src/ai-bridge-optimized.js",
    "bridge:selection-wiring": "node src/wiring/selection-wiring.js",
    "agents:coordinator": "node src/agents/agent-coordinator.js",
    "build": "npm run build:tools && tsc",
    "build:tools": "node scripts/build-tools.js",
    "build:optimized": "npm run build:tools && tsc --build --incremental",
    "build:ultra": "npm run build:optimized && npm run optimize:analyze",
    "prebuild": "npm run build:tools",
    "optimize": "node scripts/optimize-project.js",
    "optimize:full": "npm run optimize && npm run lint && npm run format && npm run test:coverage",
    "optimize:text-selection": "node scripts/optimize-text-selection.js",
    "optimize:current-tab": "node scripts/optimize-text-selection.js",
    "optimize:analyze": "node scripts/advanced-optimization-analysis.js",
    "optimize:immediate": "node scripts/immediate-optimization-fixes.js",
    "performance:analyze": "node scripts/optimize-text-selection.js",
    "performance:monitor": "node scripts/performance-optimizer.js",
    "performance:ultra": "node scripts/ultra-performance-monitor.js",
    "performance:report": "node scripts/ultra-performance-monitor.js --report-only",
    "error-detection:start": "node scripts/critical-error-detector.js",
    "error-detection:report": "node scripts/critical-error-detector.js --report-only",
    "monitor:start": "node scripts/ultra-performance-monitor.js",
    "monitor:health": "node scripts/ultra-performance-monitor.js --health-check",
    "monitor:stop": "pkill -f ultra-performance-monitor || echo 'Monitor not running'",
    "system:validate": "npm run error-detection:report && npm run performance:report",
    "system:optimize": "npm run optimize:immediate && npm run optimize:analyze",
    "system:health": "npm run monitor:health && npm run error-detection:report",
    "autonomous:execute": "npm run system:validate && npm run system:optimize && npm run system:health",
    "cloud-sql:setup": "node scripts/cloud-sql-setup.js",
    "cloud-sql:persist": "node scripts/cloud-sql-setup.js",
    "test:bridge": "cross-env NODE_OPTIONS=--experimental-vm-modules node --test tests/ai-bridge.test.js",
    "pretest": "npm run build --silent",
    "test": "cross-env NODE_OPTIONS=--experimental-vm-modules node --test tests || echo 'No tests found'",
    "pretest:watch": "npm run build --silent",
    "test:watch": "cross-env NODE_OPTIONS=--experimental-vm-modules node --test --watch tests",
    "test:jest": "jest",
    "test:coverage": "cross-env NODE_OPTIONS=--experimental-vm-modules node --test --experimental-test-coverage tests",
    "test:performance": "npm run performance:ultra -- --test-mode",
    "test:error-detection": "npm run error-detection:start -- --test-mode",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "format": "prettier --write \"**/*.{js,json,md}\"",
    "validate": "npm run lint && npm run test",
    "validate:full": "npm run validate && npm run system:validate",
    "dev": "node --watch server.js",
    "dev:optimized": "node --watch src/ai-bridge-optimized.js",
    "dev:ultra": "npm run monitor:start & node --watch --expose-gc src/optimized-server.js",
    "dev:with-monitoring": "concurrently \"npm run monitor:start\" \"npm run error-detection:start\" \"npm run dev:ultra\"",
    "clean": "rm -rf dist node_modules",
    "clean:cache": "rm -rf dist",
    "clean:reports": "rm -rf reports/*.json",
    "clean:logs": "rm -rf logs/*.log",
    "clean:all": "npm run clean && npm run clean:reports && npm run clean:logs",
    "reset": "npm run clean && npm install",
    "reset:full": "npm run clean:all && npm install && npm run build:ultra",
    "deploy:prepare": "npm run build:ultra && npm run validate:full && npm run test:performance",
    "deploy:production": "npm run deploy:prepare && npm run start:production",
    "maintenance:cleanup": "npm run clean:reports && npm run clean:logs && node --expose-gc -e 'global.gc && global.gc()'",
    "maintenance:optimize": "npm run maintenance:cleanup && npm run system:optimize",
    "ci:install": "npm ci --prefer-offline --no-audit --no-fund --silent",
    "ci:build": "npm run build:ultra",
    "ci:test": "npm run validate:full && npm run test:performance",
    "ci:deploy": "npm run deploy:prepare"
  },
  "keywords": [
    "claude",
    "llm",
    "ai",
    "mcp",
    "agent",
    "automation",
    "optimization",
    "performance",
    "monitoring",
    "error-detection",
    "auto-fix",
    "browser-history",
    "ultra-performance"
  ],
  "author": "scarmonit-creator",
  "license": "ISC",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.32.1",
    "@modelcontextprotocol/sdk": "^1.0.4",
    "better-sqlite3": "^11.8.1",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "dotenv": "^16.4.7",
    "express": "^4.21.2",
    "express-rate-limit": "^7.4.1",
    "fs-extra": "^11.2.0",
    "helmet": "^8.0.0",
    "lru-cache": "^11.0.2",
    "ws": "^8.18.0",
    "zod": "^3.24.1"
  },
  "devDependencies": {
    "@eslint/js": "^9.17.0",
    "@types/better-sqlite3": "^7.6.12",
    "@types/compression": "^1.7.5",
    "@types/cors": "^2.8.17",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.10.2",
    "@types/ws": "^8.5.13",
    "concurrently": "^9.1.0",
    "cross-env": "^7.0.3",
    "eslint": "^9.17.0",
    "eslint-config-prettier": "^9.1.0",
    "globals": "^15.13.0",
    "jest": "^29.7.0",
    "nodemon": "^3.1.7",
    "prettier": "^3.4.2",
    "tsx": "^4.19.2",
    "typescript": "^5.7.2"
  },
  "optionalDependencies": {
    "bufferutil": "^4.0.8",
    "utf-8-validate": "^6.0.4"
  },
  "config": {
    "optimization": {
      "level": "ultra",
      "monitoring": true,
      "errorDetection": true,
      "autoFix": true
    },
    "performance": {
      "cacheSize": 10000,
      "connectionPoolSize": 1000,
      "memoryLimit": "1GB",
      "gcOptimization": true
    }
  }
}