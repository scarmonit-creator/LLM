{
  "name": "llm-ultra-optimized",
  "version": "2.2.0-ultra",
  "description": "Ultra-Optimized LLM integration with breakthrough performance enhancements and autonomous optimization",
  "main": "server-ultra-optimized.js",
  "type": "module",
  "scripts": {
    "start": "node --expose-gc --max-old-space-size=1024 server-ultra-optimized.js",
    "start:production": "NODE_ENV=production ENABLE_CLUSTERING=true node --expose-gc --max-old-space-size=2048 server-ultra-optimized.js",
    "start:dev": "NODE_ENV=development node --watch --expose-gc server-ultra-optimized.js",
    "start:ultra": "NODE_ENV=production ENABLE_COMPRESSION=true ENABLE_RATE_LIMIT=true WORKERS=auto node --expose-gc --max-old-space-size=4096 server-ultra-optimized.js",
    "start:legacy": "node server.js",
    "start:enhanced": "node server-enhanced.js",
    "start:optimized": "node src/optimized-server.js",
    
    "test": "cross-env NODE_OPTIONS=--experimental-vm-modules node --test tests/*.test.js",
    "test:optimized": "cross-env NODE_OPTIONS=--experimental-vm-modules node --test tests/*optimized*.test.js",
    "test:proxy": "cross-env NODE_OPTIONS=--experimental-vm-modules node --test tests/proxy-optimized.test.js",
    "test:rag": "cross-env NODE_OPTIONS=--experimental-vm-modules node --test tests/rag-integration-optimized.test.js",
    "test:performance": "npm run test:optimized && npm run benchmark",
    "test:coverage": "cross-env NODE_OPTIONS=--experimental-vm-modules node --test --experimental-test-coverage tests/*optimized*.test.js",
    "test:watch": "cross-env NODE_OPTIONS=--experimental-vm-modules node --test --watch tests/*optimized*.test.js",
    
    "benchmark": "node --expose-gc scripts/benchmark-ultra-server.js",
    "benchmark:memory": "node --expose-gc --trace-gc scripts/memory-benchmark.js",
    "benchmark:cache": "node scripts/cache-performance-test.js",
    
    "build": "npm run build:tools && tsc",
    "build:tools": "node scripts/build-tools.js",
    "build:optimized": "npm run build:tools && tsc --build --incremental",
    "build:production": "npm run optimize:full && npm run build:optimized",
    "build:ultra": "npm run optimize:ultra && npm run build:optimized",
    
    "optimize": "node scripts/optimize-project.js",
    "optimize:autonomous": "node scripts/autonomous-performance-optimizer.js",
    "optimize:ultra": "npm run optimize:autonomous && node scripts/ultra-optimization-nexus.js",
    "optimize:memory": "node --expose-gc scripts/memory-optimizer.js",
    "optimize:cache": "node scripts/cache-optimizer.js",
    "optimize:full": "npm run optimize:ultra && npm run optimize:memory && npm run optimize:cache",
    
    "monitor": "node scripts/performance-monitor.js",
    "monitor:memory": "node --expose-gc scripts/memory-monitor.js",
    "monitor:cache": "node scripts/cache-monitor.js",
    "monitor:real-time": "node scripts/real-time-monitor.js",
    
    "health": "curl -f http://localhost:8080/health",
    "health:detailed": "curl -f http://localhost:8080/health | jq .",
    "metrics": "curl -f http://localhost:8080/metrics | jq .",
    "status": "curl -f http://localhost:8080/api/status | jq .",
    
    "dev": "npm run start:dev",
    "dev:ultra": "NODE_ENV=development ENABLE_COMPRESSION=false npm run start:ultra",
    "dev:debug": "NODE_ENV=development DEBUG=* node --inspect server-ultra-optimized.js",
    
    "lint": "eslint . --ext .js,.ts",
    "lint:fix": "eslint . --ext .js,.ts --fix",
    "format": "prettier --write \"**/*.{js,ts,json,md}\"",
    "format:check": "prettier --check \"**/*.{js,ts,json,md}\"",
    
    "validate": "npm run lint && npm run test:optimized && npm run benchmark",
    "validate:full": "npm run optimize:full && npm run validate",
    "validate:production": "npm run build:production && npm run test:performance",
    
    "clean": "rm -rf dist node_modules .nyc_output coverage",
    "clean:cache": "rm -rf dist .cache",
    "clean:logs": "rm -rf logs/*.log performance.log",
    "clean:all": "npm run clean && npm run clean:cache && npm run clean:logs",
    
    "reset": "npm run clean && npm install",
    "reset:full": "npm run clean:all && npm install && npm run build:production",
    
    "deploy:prepare": "npm run validate:production && npm run build:production",
    "deploy:test": "NODE_ENV=test npm run start:ultra",
    "deploy:staging": "NODE_ENV=staging npm run start:production",
    "deploy:production": "NODE_ENV=production npm run start:ultra",
    
    "nitric:dev": "nitric start",
    "nitric:build": "nitric build",
    "nitric:deploy": "nitric up --provider aws",
    
    "docker:build": "docker build -t llm-ultra-optimized .",
    "docker:run": "docker run -p 8080:8080 --name llm-ultra llm-ultra-optimized",
    "docker:stop": "docker stop llm-ultra && docker rm llm-ultra"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "keywords": [
    "llm", "ai", "optimization", "ultra-performance", "autonomous",
    "caching", "memory-management", "predictive", "machine-learning",
    "express", "nodejs", "typescript", "browser-history", "rag",
    "claude", "anthropic", "mcp", "server", "api", "monitoring"
  ],
  "author": "scarmonit-creator",
  "license": "ISC",
  "dependencies": {
    "@anthropic-ai/sdk": "^0.32.1",
    "@modelcontextprotocol/sdk": "^1.0.4",
    "better-sqlite3": "^11.8.1",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "dotenv": "^16.4.7",
    "express": "^4.21.2",
    "express-rate-limit": "^7.4.1",
    "fs-extra": "^11.2.0",
    "helmet": "^8.0.0",
    "lru-cache": "^11.0.2",
    "winston": "^3.17.0",
    "zod": "^3.24.1"
  },
  "devDependencies": {
    "@eslint/js": "^9.17.0",
    "@types/better-sqlite3": "^7.6.12",
    "@types/compression": "^1.7.5",
    "@types/cors": "^2.8.17",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.10.2",
    "cross-env": "^7.0.3",
    "eslint": "^9.17.0",
    "eslint-config-prettier": "^9.1.0",
    "globals": "^15.13.0",
    "jest": "^29.7.0",
    "prettier": "^3.4.2",
    "tsx": "^4.19.2",
    "typescript": "^5.7.2"
  },
  "optionalDependencies": {
    "@nitric/sdk": "^1.4.2",
    "fsevents": "^2.3.3",
    "psutil": "*"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/scarmonit-creator/LLM.git"
  },
  "bugs": {
    "url": "https://github.com/scarmonit-creator/LLM/issues"
  },
  "homepage": "https://github.com/scarmonit-creator/LLM#readme",
  "config": {
    "optimization": {
      "level": "ultra",
      "caching": "multi-tier",
      "compression": "adaptive",
      "monitoring": "real-time",
      "prediction": "ml-enhanced"
    },
    "performance": {
      "memoryLimit": "4GB",
      "cacheSize": "100MB",
      "gcOptimization": true,
      "clustering": "auto",
      "keepAliveTimeout": 65000
    },
    "development": {
      "hotReload": true,
      "debugMode": true,
      "verboseLogging": true,
      "profiling": "advanced"
    }
  },
  "volta": {
    "node": "20.10.0",
    "npm": "10.2.3"
  },
  "packageManager": "npm@10.2.3"
}